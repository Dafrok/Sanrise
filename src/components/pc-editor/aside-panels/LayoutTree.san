<template lang="pug">
.layout-tree
  .label(class="{{path === activeLayout ? 'active' : ''}}", on-dblclick="edit($event)", on-click="activeLayout($event)")
    .leaf(s-if="!showTools")
      form.edit(s-if="editable && path === activeLayout", on-submit="submit($event)")
        input(value="{= id =}", on-blur="submit($event)")
      .content(san-else)
        span.expand
          span(s-if="isRoot").fa.fa-chevron-left
          span(san-else, on-click="toggleLayout")
            span(s-if="layout.hidden").fa.fa-eye-slash
            span(san-else).fa.fa-eye
        span {{layout.id}}
    .tools(s-if="!editable", on-mouseenter="toggleTools(!0)", on-mouseleave="toggleTools(!1)")
      span(s-if="showTools")
        a.fa.fa-trash(on-click="removeLayout")
        a.fa.fa-cut
        a.fa.fa-copy
        a.fa.fa-paste
        a.fa.fa-plus(on-click="addLayout")
        a.fa.fa-pencil-square-o
      span.fa.fa-ellipsis-h(s-if="!showTools")
  ul.list(s-if="layout.children.length")
    li(s-for="item, index in layout.children")
      layout-tree(s-if="item.type === 0", layout="{{item}}", path="{{path}}.children[{{index}}]", activeLayout="{{activeLayout}}")
</template>

<script>
import {store} from 'san-store'
export default {
  initData () {
    return {
      showTools: false,
      editable: false,
      id: ''
    }
  },
  toggleTools (bool) {
    this.data.set('showTools', bool)
  },
  addLayout () {
    store.dispatch('addLayout')
  },
  toggleLayout () {
    this.activeLayout()
    store.dispatch('toggleLayout')
  },
  removeLayout () {
    store.dispatch('removeLayout')
  },
  activeLayout (e) {
    e && e.stopPropagation()
    store.dispatch('activeLayoutForce', this.data.get('path'))
  },
  edit (e) {
    e.preventDefault()
    if (this.data.get('showTools')) {
      return
    }
    this.data.set('id', this.data.get('layout.id'))
    this.data.set('editable', true)
    setTimeout(() => this.el.querySelector('input').focus())
  },
  submit (e) {
    e.preventDefault()
    store.dispatch('updateLayoutId', {
      path: this.data.get('path'),
      value: this.data.get('id')
    })
    this.data.set('editable', false)
    setTimeout(() => this.data.set('id', ''))
  },
  components: {
    'layout-tree': 'self'
  }
}
</script>