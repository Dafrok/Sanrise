<template lang="pug">
div.aside-panel
  nav.tab
    a(s-for="tab, index in tabs", on-click="switchTab(tab.name)", class="fa fa-{{tab.icon}} {{tab.name === activeTab ? 'active' : ''}}", title="{{tab.name}}")
  div.tabs-container
    div.title
      b {{activeTab}}
    div.left.placeholder(s-if="!activeLayout") 未选取布局块。请点击视图编辑面板选择布局块或 <a on-click="selectRootLayout"><i>选取根节点</i></a> 。
    div.tabs
      layout-panel(s-if="layoutPanelActive")
      style-panel(s-if="stylePanelActive", currentLayout="{{currentLayout}}")
      quick-set-panel(s-if="quickSetPanelActive", currentLayout="{{currentLayout}}")
      code-panel(s-if="codePanelActive", currentLayout="{{currentLayout}}", panel="{{panel}}")
</template>

<script>
import LayoutPanel from './LayoutPanel.san'
import StylePanel from './StylePanel.san'
import QuickSetPanel from './QuickSetPanel.san'
import {store, connect} from 'san-store'
import {getCurrentLayout} from '@/base/util.js'

export default connect.san({
  layout: 'pc.data.layout',
  activeLayout: 'pc.activeLayout',
  panel: 'pc.panel'
})({
  components: {
    'layout-panel': LayoutPanel,
    'style-panel': StylePanel,
    'quick-set-panel': QuickSetPanel
  },
  switchTab (name) {
    this.data.set('activeTab', name)
  },
  selectRootLayout () {
    store.dispatch('activeLayoutForce', 'layout')
  },
  computed: {
    tabs () {
      const panel = this.data.get('panel')
      const activeTab = this.data.get('activeTab')
      const tabs = [
        {name: '布局', icon: "list"},
        {name: '快速设置', icon: "wrench"},
        {name: '样式', icon: "css3"},
        {name: '组件', icon: "cubes"},
        {name: '插槽', icon: "window-restore"},
        {name: '事件', icon: 'exclamation-circle'}
        // {name: '源码', icon: 'code'}
      ]
      switch (panel) {
        default:
          return tabs
      }
    },
    currentLayout () {
      const activeLayout = this.data.get('activeLayout')
      const layout = this.data.get('layout')
      return store.getState(`pc.data.${activeLayout}`)
    },
    layoutPanelActive () {
      const activeTab = this.data.get('activeTab')
      const activeLayout = this.data.get('activeLayout')
      return activeLayout && activeTab === '布局'
    },
    quickSetPanelActive () {
      const activeTab = this.data.get('activeTab')
      const activeLayout = this.data.get('activeLayout')
      return activeLayout && activeTab === '快速设置'
    },
    stylePanelActive () {
      const activeTab = this.data.get('activeTab')
      const activeLayout = this.data.get('activeLayout')
      return activeLayout && activeTab === '样式'
    },
    codePanelActive () {
      const activeTab = this.data.get('activeTab')
      const activeLayout = this.data.get('activeLayout')
      return activeLayout && activeTab === '源码'
    },
  },
  initData () {
    return {
      activeTab: '布局',
    }
  }
})
</script>

<style lang="stylus">
@import "~@/config/variables.styl"
.aside-panel
  height 100%
  width 100%
  display flex
  justify-content space-between
  &>.tabs-container
    overflow-y auto
    overflow-x hidden
    .placeholder
      color #999
      text-align center
      font-size 12px
      line-height 1.5
      padding 10px
      &.left
        text-align left
    &>.title
      color white
      font-size 14px
      background $panel-color
      color $text-color
      padding 3px 5px
  &>nav.tab
    width 30px
    background lighten($aside-color, 10)
    a
      width 30px
      height 30px
      display block
      text-align center
      line-height 30px
      cursor pointer
      &.active
        background $primary-color
  .tabs-container
    flex 1
    position relative
  .form-control
    color $primary-color
    font-size 0
    font-size 12px
    margin 5px 8px
    .label, .input
      box-sizing border-box
      text-overflow ellipsis
      white-space nowrap
      overflow hidden
      color $text-color
    .input
      background-color lighten($aside-color, 20)
      &>input, &>select
        color $text-color
        box-sizing border-box
        width 100%
        height 24px
        line-height 24px
        border 0
        margin 0
        outline 0
        background transparent
        padding 0 5px
  .btn
    text-align center
    font-size 12px
    background $panel-color
    line-height 2
    display block
    margin 10px 15px
    &:hover
      background lighten($panel-color, 10)
      color white
    &.is-primary
      background $active-color
      &:hover
        background lighten($active-color, 10)
</style>
